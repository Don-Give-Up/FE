name: CI

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 3. Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 4. Install dependencies
      - name: Install dependencies
        run: npm install

      # 5. Run lint
      - name: Run ESLint
        run: npm run lint

      # 6. Build the project
      - name: Build project
        run: npm run build

      # 7. Send Discord notification
      - name: Send Discord Notification
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{"content": "✅ Build succeeded! The CI pipeline for the branch has completed successfully."}' \
          $DISCORD_WEBHOOK

      - name: Create output
        run: sh ./build.sh

      - name: Push to another repository
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.AUTO_ACTIONS }} # 환경 변수에 Personal Access Token 추가
        with:
          source-directory: "output"
          destination-github-username: hojin0729
          destination-repository-name: FE
          target-branch: dev
          commit-message: "Automatic deployment from GitHub Actions"
          user-name: "hojin0729" # 푸시할 때 사용할 사용자 이름을 명시
          user-email: ${{ secrets.EMAIL }} # GitHub Secrets에서 설정한 이메일 사용

      - name: Test get variable exported by push-to-another-repository
        run: echo $DESTINATION_CLONED_DIRECTORY
        